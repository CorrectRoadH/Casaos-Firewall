/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/firewall": {
    /**
     * Get State
     * @description Get firewall state
     */
    get: operations["getState"];
  };
  "/port": {
    /**
     * Get Opened Ports
     * @description (TODO)
     */
    get: operations["getOpenedPorts"];
    /**
     * Update a Port Rule
     * @description (TODO)
     */
    put: operations["updatePortRule"];
    /**
     * Open or Close a Port
     * @description (TODO)
     */
    post: operations["openOrClosePort"];
    /**
     * Delete a Port Rule
     * @description (TODO)
     */
    delete: operations["deletePortRule"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Rule: string;
    Port: {
      /** @example 80 */
      port?: string;
      /** @example tcp */
      protocol?: string;
      /** @example open */
      action?: string;
    };
    BaseResponse: {
      /**
       * @description message returned by server side if there is any
       * @example
       */
      message?: string;
    };
  };
  responses: {
    /** @description OK */
    GetStateResponseOK: {
      content: {
        "application/json": components["schemas"]["BaseResponse"] & {
          /** @example true */
          data?: boolean;
        };
      };
    };
    /** @description OK */
    GetVersionResponseOK: {
      content: {
        "application/json": components["schemas"]["BaseResponse"] & {
          /** @example 0.4.5 */
          data?: string;
        };
      };
    };
    /** @description OK */
    ChangePortResponseOK: {
      content: {
        "application/json": components["schemas"]["BaseResponse"] & {
          /** @example success */
          data?: string;
        };
      };
    };
    /** @description OK */
    GetPortsResponseOK: {
      content: {
        "application/json": components["schemas"]["BaseResponse"] & {
          data?: components["schemas"]["Port"][];
        };
      };
    };
    /** @description Bad Request */
    ResponseBadRequest: {
      content: {
        "application/json": components["schemas"]["BaseResponse"];
      };
    };
    /** @description Service Unavailable */
    ResponseServiceUnavailable: {
      content: {
        "application/json": components["schemas"]["BaseResponse"];
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get State
   * @description Get firewall state
   */
  getState: {
    responses: {
      200: components["responses"]["GetStateResponseOK"];
      503: components["responses"]["ResponseServiceUnavailable"];
    };
  };
  /**
   * Get Opened Ports
   * @description (TODO)
   */
  getOpenedPorts: {
    responses: {
      200: components["responses"]["GetPortsResponseOK"];
      503: components["responses"]["ResponseServiceUnavailable"];
    };
  };
  /**
   * Update a Port Rule
   * @description (TODO)
   */
  updatePortRule: {
  };
  /**
   * Open or Close a Port
   * @description (TODO)
   */
  openOrClosePort: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Port"];
      };
    };
    responses: {
      200: components["responses"]["ChangePortResponseOK"];
      403: components["responses"]["ResponseBadRequest"];
      503: components["responses"]["ResponseServiceUnavailable"];
    };
  };
  /**
   * Delete a Port Rule
   * @description (TODO)
   */
  deletePortRule: {
  };
}
