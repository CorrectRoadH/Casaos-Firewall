/**
 * CasaOS Firewall API
 * <picture>     <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800px.png\">     <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png\">     <img alt=\"CasaOS\" src=\"https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png\"> </picture>
 *
 * The version of the OpenAPI document: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface BaseResponse
 */
export interface BaseResponse {
    /**
     * message returned by server side if there is any
     * @type {string}
     * @memberof BaseResponse
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface GetRules200Response
 */
export interface GetRules200Response {
    /**
     * message returned by server side if there is any
     * @type {string}
     * @memberof GetRules200Response
     */
    'message'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GetRules200Response
     */
    'data'?: Array<string>;
}
/**
 *
 * @export
 * @interface GetRules200ResponseAllOf
 */
export interface GetRules200ResponseAllOf {
    /**
     *
     * @type {Array<string>}
     * @memberof GetRules200ResponseAllOf
     */
    'data'?: Array<string>;
}
/**
 * NftableMethodsApi - axios parameter creator
 * @export
 */
export declare const NftableMethodsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * (TODO)
     * @summary Get Rules
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRules: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NftableMethodsApi - functional programming interface
 * @export
 */
export declare const NftableMethodsApiFp: (configuration?: Configuration) => {
    /**
     * (TODO)
     * @summary Get Rules
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRules(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRules200Response>>;
};
/**
 * NftableMethodsApi - factory interface
 * @export
 */
export declare const NftableMethodsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * (TODO)
     * @summary Get Rules
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRules(options?: any): AxiosPromise<GetRules200Response>;
};
/**
 * NftableMethodsApi - object-oriented interface
 * @export
 * @class NftableMethodsApi
 * @extends {BaseAPI}
 */
export declare class NftableMethodsApi extends BaseAPI {
    /**
     * (TODO)
     * @summary Get Rules
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NftableMethodsApi
     */
    getRules(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRules200Response, any>>;
}
