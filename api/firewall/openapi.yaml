openapi: 3.0.3

info:
  title: CasaOS Firewall API
  version: v2
  description: |-
    <picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800px.png">
        <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
        <img alt="CasaOS" src="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
    </picture>

servers:
    - url: /v2/firewall

tags:
  - name: Nftables methods
    description: |-
      Low-level API

x-tagGroups:
  - name: Nftables
    tags:
      - Nftable methods

security:
  - access_token: []

paths:
  /nftables:
    get:
      summary: Get Rules
      description: |-
        (TODO)
      operationId: getRules
      tags:
        - Nftable methods
      responses:
        "200":
          $ref: "#/components/responses/GetRulesResponseOK"
        "503":
          $ref: "#/components/responses/ResponseServiceUnavailable"
    post:
      summary: Open or Close a Port
      description: |-
        (TODO)
      operationId: openOrClosePort
      tags:
        - Nftable methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Port"
      responses:
        "200":
          $ref: "#/components/responses/ChangePortResponseOK"
        "403":
          $ref: "#/components/responses/ResponseBadRequest"
        "503":
          $ref: "#/components/responses/ResponseServiceUnavailable"
  /nftables/version:
    get:
      summary: Get Version
      description: |-
        (TODO)
      operationId: getVersion
      tags:
        - Nftable methods
      responses:
        "200":
          $ref: "#/components/responses/GetVersionResponseOK"
        "503":
          $ref: "#/components/responses/ResponseServiceUnavailable"

components:
  securitySchemes:
    access_token:
      type: apiKey
      in: header
      name: Authorization

  responses:
    GetRulesResponseOK:
      description: OK
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Rule"
    GetVersionResponseOK:
      description: OK
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - type: object
                properties:
                  data:
                    type: string
                    example: "0.9.0"  
    ChangePortResponseOK:
      description: OK
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - type: object
                properties:
                  data:
                    type: string
                    example: "success"  
    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Bad Request"
    ResponseServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Service Unavailable"
  schemas:
    Rule:
      type: string
    Port:
      type: object
      properties:
        port:
          type: string
          example: "80"
        protocol:
          type: string
          example: "tcp"
        action:
          type: string
          example: "open"
    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""
